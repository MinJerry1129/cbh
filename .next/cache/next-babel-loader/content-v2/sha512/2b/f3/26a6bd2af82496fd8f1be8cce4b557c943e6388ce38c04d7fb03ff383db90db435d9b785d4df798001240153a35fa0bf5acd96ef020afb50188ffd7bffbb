{"ast":null,"code":"import _defineProperty from \"D:/work/nextjs/cbh/nextjs/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"D:/work/nextjs/cbh/nextjs/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"D:\\\\work\\\\nextjs\\\\cbh\\\\nextjs\\\\pages\\\\all\\\\main\\\\main.js\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useRouter } from 'next/router';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport React, { Children } from 'react';\n\nvar Mainbody = function Mainbody(_ref) {\n  var bodyText = _ref.bodyText,\n      props = _objectWithoutProperties(_ref, [\"bodyText\"]);\n\n  return /*#__PURE__*/_jsxDEV(Link, _objectSpread(_objectSpread({}, props), {}, {\n    children: /*#__PURE__*/React.cloneElement(child, {\n      className: bodyText || null\n    })\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Mainbody;\nMainbody.propTypes = {\n  bodyText: PropTypes.string.isRequired\n};\nexport default Mainbody;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mainbody\");","map":{"version":3,"sources":["D:/work/nextjs/cbh/nextjs/pages/all/main/main.js"],"names":["useRouter","PropTypes","Link","React","Children","Mainbody","bodyText","props","cloneElement","child","className","propTypes","string","isRequired"],"mappings":";;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA4B;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAZC,KAAY;;AAC3C,sBACE,QAAC,IAAD,kCAAUA,KAAV;AAAA,2BACGJ,KAAK,CAACK,YAAN,CAAmBC,KAAnB,EAA0B;AACzBC,MAAAA,SAAS,EAAEJ,QAAQ,IAAI;AADE,KAA1B;AADH;AAAA;AAAA;AAAA;AAAA,WADF;AAOD,CARD;;KAAMD,Q;AAUNA,QAAQ,CAACM,SAAT,GAAqB;AACjBL,EAAAA,QAAQ,EAAEL,SAAS,CAACW,MAAV,CAAiBC;AADV,CAArB;AAIA,eAAeR,QAAf","sourcesContent":["import { useRouter } from 'next/router'\r\nimport PropTypes from 'prop-types'\r\nimport Link from 'next/link'\r\nimport React, { Children } from 'react'\r\n\r\nconst Mainbody = ({ bodyText, ...props }) => {\r\n  return (\r\n    <Link {...props}>\r\n      {React.cloneElement(child, {\r\n        className: bodyText || null,\r\n      })}\r\n    </Link>\r\n  )\r\n}\r\n\r\nMainbody.propTypes = {\r\n    bodyText: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Mainbody"]},"metadata":{},"sourceType":"module"}